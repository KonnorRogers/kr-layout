


{"package.json":"{\n  \"name\": \"kr-layout\",\n  \"version\": \"0.0.2\",\n  \"description\": \"A component for quickly scaffolding layouts\",\n  \"main\": \"./exports/index.js\",\n  \"module\": \"./exports/index.js\",\n  \"types\": \"./exports/index.d.ts\",\n  \"jsdelivr\": \"./bundles/all.js\",\n  \"exports\": {\n    \".\": \"./exports/index.js\",\n    \"./package.json\": \"./package.json\",\n    \"./exports/*.js\": \"./exports/*.js\",\n    \"./exports/*\": \"./exports/*\",\n    \"./types/*\": \"./types/*.d.ts\",\n    \"./cdn/exports/*.js\": \"./cdn/exports/*.js\",\n    \"./cdn/exports/*\": \"./cdn/exports/*\",\n    \"./bundles/*.js\": \"./bundles/*.js\",\n    \"./bundles/*\": \"./bundles/*\"\n  },\n  \"type\": \"module\",\n  \"files\": [\n    \"bundles\",\n    \"cdn\",\n    \"exports\",\n    \"internal\",\n    \"types\",\n    \"README.md\",\n    \"LICENSE\"\n  ],\n  \"scripts\": {\n    \"start:docs\": \"cd docs && bin/bridgetown start\",\n    \"setup\": \"pnpm install && cd docs && pnpm install && bundle install\",\n    \"build:api\": \"typedoc --out ./docs/output/references/api/ ./exports/**/*.js\",\n    \"build:api-json\": \"typedoc --json ./typedoc-generation.json ./exports/**/*.js\",\n    \"build:cdn\": \"node esbuild.config.js\",\n    \"build:cem\": \"custom-elements-manifest analyze\",\n    \"build:docs\": \"pnpm run build && cd docs && pnpm run build\",\n    \"build\": \"npm run clean && tsc && npm run build:cem && npm run build:cdn && npm run precompile-templates\",\n    \"clean\": \"rimraf -g \\\"./{exports,internal}/**/*.d.ts\\\" -g \\\"./cdn\\\"\",\n    \"create:component\": \"plop component --plopfile scripts/plop/plopfile.js\",\n    \"rename-package\": \"plop rename-package --plopfile scripts/plop/plopfile.js\",\n    \"precompile-templates\": \"plop precompile-templates --plopfile scripts/plop/plopfile.js\",\n    \"plop\": \"plop --plopfile scripts/plop/plopfile.js\",\n    \"watch:cem\": \"custom-elements-manifest analyze --watch\",\n    \"analyze\": \"custom-elements-manifest analyze\",\n    \"update-version\": \"node scripts/update-version.js\",\n    \"version\": \"npm run update-version && npm run build && git add internal/version.js\",\n    \"prepublish\": \"npm run update-version && npm run build\",\n    \"deploy:patch\": \"npm version patch && npm publish && git push --follow-tags\",\n    \"deploy:minor\": \"npm version minor && npm publish && git push --follow-tags\",\n    \"deploy:major\": \"npm version major && npm publish && git push --follow-tags\",\n    \"publish:beta\": \"npm publish --tag=beta && git push --follow-tags\",\n    \"lint\": \"prettier --check .\",\n    \"fix\": \"prettier --write .\",\n    \"verify\": \"npm run lint && npm run build && npm run test\",\n    \"test\": \"web-test-runner\",\n    \"test:watch\": \"web-test-runner --watch\"\n  },\n  \"keywords\": [\n\n  ],\n  \"license\": \"MIT\",\n  \"repository\": \"git@github.com:KonnorRogers/kr-layout.git\",\n  \"bugs\": {\n    \"url\": \"https://github.com/KonnorRogers/kr-layout/issues\"\n  },\n  \"homepage\": \"https://github.com/KonnorRogers/kr-layout\",\n  \"author\": \"KonnorRogers <konnor5456@gmail.com>\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"devDependencies\": {\n    \"@custom-elements-manifest/analyzer\": \"0.10.2\",\n    \"@esm-bundle/chai\": \"4.3.4-fix.0\",\n    \"@open-wc/testing\": \"^4.0.0\",\n    \"@open-wc/testing-helpers\": \"^3.0.1\",\n    \"@types/node\": \"^20.14.8\",\n    \"@web/test-runner\": \"^0.18.2\",\n    \"@web/test-runner-commands\": \"^0.9.0\",\n    \"@web/test-runner-playwright\": \"^0.11.0\",\n    \"cem-plugin-expanded-types\": \"^1.3.1\",\n    \"esbuild\": \"^0.23.0\",\n    \"fdir\": \"^6.3.0\",\n    \"gh-pages\": \"^6.1.1\",\n    \"glob\": \"^10.4.1\",\n    \"globby\": \"^14.0.2\",\n    \"handlebars\": \"^4.7.8\",\n    \"playwright\": \"^1.44.1\",\n    \"plop\": \"^4.0.1\",\n    \"prettier\": \"^3.3.3\",\n    \"rimraf\": \"^5.0.7\",\n    \"typedoc\": \"^0.26.1\",\n    \"typescript\": \"~5.5.2\"\n  },\n  \"customElements\": \"custom-elements.json\",\n  \"dependencies\": {\n  }\n}","README.md":"# `kr-layout`\n\n## Documentation\n\n<https://konnorrogers.github.io/kr-layout>\n\n## Initial install\n\n```bash\nmkdir -p my-project-name\ncd my-project-name\ngit clone https://github.com/konnorrogers/npm-starter . --depth 1\nrm -rf .git\ngit init\npnpm install -D @web/test-runner @open-wc/testing-helpers @web/test-runner-playwright typescript rimraf @esm-bundle/chai playwright\npnpm exec playwright install --with-deps\n```\n\n## Renaming your package\n\n**THIS IS A DESTRUCTIVE ACTION THAT CANNOT BE UNDONE**\n\nTo rename your package, you can run the following command:\n\n```bash\nnpm run rename-package\n```\n\nWhich will prompt you for a new name.\n\n## Structure\n\n`exports/` is publicly available files\n`internal/` is...well...internal.\n\n`exports` and `internal` shouldn **NOT** write their own `.d.ts` that are co-located.\n\n`types/` is where you place your handwritten `.d.ts` files.\n\n## SSR\n\nTo SSR this component, here's the expected Declarative Shadow DOM HTML, copy and paste the declarative shadow DOM HTML which can be found here:\n\n[/exports/kr-layout/kr-layout.dsd.html](/exports/kr-layout/kr-layout.dsd.html)\n","types/index.d.ts":"","exports/components/kr-layout/kr-layout-globals.d.ts":"import type KrLayout from \"./kr-layout.js\";\ndeclare global {\n    interface HTMLElementTagNameMap {\n        \"kr-layout\": KrLayout;\n    }\n}\nexport {};\n","exports/components/kr-layout/kr-layout-globals.ts":"import type KrLayout from \"./kr-layout.js\";\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"kr-layout\": KrLayout;\n  }\n}\n\nexport {};\n","exports/components/kr-layout/kr-layout-register.d.ts":"export default KrLayout;\nexport * from \"./kr-layout.js\";\nimport KrLayout from \"./kr-layout.js\";\n","exports/components/kr-layout/kr-layout-register.js":"// @ts-check\nimport KrLayout from \"./kr-layout.js\";\n\nKrLayout.define(\"kr-layout\");\n\nexport default KrLayout;\nexport * from \"./kr-layout.js\";\n\n/**\n * @type {import(\"./kr-layout-globals.js\")}\n */\n","exports/components/kr-layout/kr-layout.d.ts":"/**\n * @customElement\n * @tagname kr-layout\n * @summary A small layout utility for quickly scaffolding sites.\n * @documentation https://konnorrogers.github.io/kr-layout/components/kr-layout\n * @status experimental\n * @since 0.0.1\n *\n * @slot skip-links - A place to put visually hidden links for things like skipping to main content.\n * @slot header - The header slot for things like navigation\n * @slot main-header - A header that will appear \"inline\" with the main content area.\n * @slot - The main content. The meat and potatos.\n * @slot main-footer - An inline footer with the main content area. This will appear \"above the fold\" if your main content does not cause an overflow.\n * @slot menu - This will appear on the left hand side of the page in LTR languages. This is a good place to provide sidebar navigation.\n * @slot aside - This will appear on the right hand side of the page in LTR languages.\n * @slot footer - This is a footer that will take up 100% width of the page and will appear \"below the fold\" of a page regardless of if main content overflows.\n * @slot dialog - This is a place to put any elements such as toasts, dialogs, etc. Anything which you would normally put at the end of the `<body>`. Generally this is no longer needed because of `popover` attributes.\n *\n * @csspart skip-links - Wrapper around skip-links slot\n * @csspart base - Base div which sets up the initial grid for header, body, footer\n * @csspart header - Wrapper around the header slot\n * @csspart main - Wrapper around the main slot\n * @csspart main-header - Wrapper around the main-header slot\n * @csspart body - Wrapper around the menu, main-content, and aside parts.\n * @csspart menu - Wrapper around the menu slot.\n * @csspart main-content - Wrapper around the default slot. This is the center of your page.\n * @csspart main-footer - Wrapper around the main-footer slot\n * @csspart aside - Wrapper around the aside slot\n * @csspart footer - Wrapper around the footer slot\n * @csspart dialog - Wrapper around the dialog slot\n *\n * @cssproperty --example - An example CSS custom property.\n */\nexport default class KrLayout extends BaseElement {\n    static styles: string;\n    static get observedAttributes(): string[];\n    static renderHTML(): string;\n    static render(): string;\n    /**\n     * Renders to declarative shadow dom.\n     */\n    static renderDSD(): string;\n    /**\n     * @param {null | string} val\n     */\n    set disableSticky(val: string | null);\n    get disableSticky(): string | null;\n    _disableSticky: null | string;\n    /**\n     * @param {string} slot\n     */\n    createResizeObserver(slot: string): ResizeObserver;\n    /**\n     * @param {string} name\n     * @param {string | null} oldVal\n     * @param {string | null} newVal\n     */\n    attributeChangedCallback(name: string, oldVal: string | null, newVal: string | null): void;\n    headerResizeObserver: ResizeObserver;\n    footerResizeObserver: ResizeObserver;\n    /** @type {ShadowRoot} */\n    shadowRoot: ShadowRoot;\n    connectedCallback(): void;\n    header: Element | null | undefined;\n    footer: Element | null | undefined;\n    disconnectedCallback(): void;\n}\nimport { BaseElement } from \"../../../internal/base-element.js\";\n","exports/components/kr-layout/kr-layout.dsd.html":"<!-- This file is auto-generated -->\n<template shadowrootmode=\"open\">\n      <!-- version: 0.0.2 -->\n      <style>\n        *,\n    *:after,\n    *:before {\n      box-sizing: border-box;\n    }\n  \n    :host(:dir(rtl)) *,\n    :host(:dir(rtl)) *:after,\n    :host(:dir(rtl)) *:before {\n      direction: rtl;\n    }\n  \n    :host(:dir(ltr)) *,\n    :host(:dir(ltr)) *:after,\n    :host(:dir(ltr)) *:before {\n      direction: ltr;\n    }\n  \n    .visually-hidden:not(:focus-within) {\n      position: absolute;\n      overflow: hidden;\n      clip: rect(0 0 0 0);\n      clip-path: inset(50%);\n      width: 1px;\n      height: 1px;\n      white-space: nowrap;\n    }\n  \n    [hidden] {\n      display: none !important;\n    }\n  \n    :host {\n      display: block;\n      box-sizing: border-box;\n      min-height: var(--height);\n      --height: 100vh;\n      --height: 100dvh;\n  \n      --menu-width: auto;\n      --main-width: 1fr;\n      --aside-width: auto;\n  \n      /** This is a best guess. We'll attempt to calculate this with a resize observer. **/\n      --header-height: 68.33px;\n    }\n  \n    :host([variant=\"documentation\"]) {\n      --menu-width: 250px;\n      --main-width: 105ch;\n      --aside-width: auto;\n    }\n  \n    :host([variant=\"documentation\"])::part(body) {\n      justify-content: center;\n    }\n  \n    *,\n    *:after,\n    *:before {\n      box-sizing: border-box;\n    }\n  \n    :host::part(base) {\n      display: grid;\n      /** Header, Main, Footer **/\n      grid-template-rows: minmax(0, auto) minmax(0, 1fr) minmax(0, auto);\n      min-height: var(--height);\n    }\n  \n    :host::part(header) {\n      max-width: 100%;\n      position: sticky;\n      background: white;\n      z-index: 1;\n    }\n  \n    :is(.header, .aside, .menu, .footer) ::slotted(*) {\n      height: 100%;\n    }\n  \n    :is(.aside, .menu) ::slotted(*) {\n      min-width: 100%;\n      width: 100%;\n      max-width: 100%;\n    }\n  \n    :host::part(header) {\n      top: 0px;\n    }\n  \n    :host::part(body) {\n      display: grid;\n      /** Menu, Main, Aside **/\n      grid-template-columns: minmax(0, var(--menu-width)) minmax(\n          0,\n          var(--main-width)\n        ) minmax(0, var(--aside-width));\n      grid-template-rows: minmax(0, 1fr);\n    }\n  \n    :host::part(aside),\n    :host::part(menu) {\n      display: grid;\n      grid-template-columns: minmax(0, 1fr);\n      max-height: calc(var(--height) - var(--header-height));\n      overflow: auto;\n      position: sticky;\n      top: var(--header-height);\n      overscroll-behavior: contain;\n    }\n  \n    :host([disable-sticky~=\"header\"]) {\n      --header-height: 0px;\n    }\n  \n    :host([disable-sticky~=\"header\"])::part(header) {\n      position: static;\n    }\n  \n    :host([disable-sticky~=\"aside\"])::part(aside),\n    :host([disable-sticky~=\"menu\"])::part(menu) {\n      position: static;\n    }\n  \n    :host::part(main) {\n      position: relative;\n      display: grid;\n      grid-template-columns: minmax(0, 1fr);\n      /* main-header, main, main-footer */\n      grid-template-rows: minmax(0, auto) minmax(0, 1fr) minmax(0, auto);\n    }\n  \n    :host::part(footer) {\n    }\n  \n    .skip-links {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: calc(var(--header-height, 48px) - 2px);\n      width: 100vw;\n      z-index: 4;\n      background-color: inherit;\n      display: grid;\n      grid-template-columns: minmax(0, 1fr);\n      place-items: center;\n      text-align: center;\n    }\n      </style>\n\n      <!-- renderHTML() -->\n      <div class=\"visually-hidden skip-links\" part=\"skip-links\">\n    <slot name=\"skip-links\"> </slot>\n  </div>\n\n  <div class=\"base\" part=\"base\">\n    <div class=\"header\" part=\"header\">\n      <slot name=\"header\"></slot>\n    </div>\n\n    <div class=\"body\" part=\"body\">\n      <div class=\"menu\" part=\"menu\">\n        <slot name=\"menu\"></slot>\n      </div>\n\n      <div class=\"main\" part=\"main\">\n        <div class=\"main-header\" part=\"main-header\">\n          <slot name=\"main-header\"></slot>\n        </div>\n\n        <div class=\"main-content\" part=\"main-content\"><slot></slot></div>\n\n        <div class=\"main-footer\" part=\"main-footer\">\n          <slot name=\"main-footer\"></slot>\n        </div>\n      </div>\n\n      <div class=\"aside\" part=\"aside\">\n        <slot name=\"aside\"></slot>\n      </div>\n    </div>\n\n    <div class=\"footer\" part=\"footer\">\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n\n  <div part=\"dialog\" class=\"dialog\">\n    <slot name=\"dialog\"></slot>\n  </div>\n    </template>","exports/components/kr-layout/kr-layout.js":"import { BaseElement } from \"../../../internal/base-element.js\";\nimport { componentStyles } from \"./kr-layout.styles.js\";\n\nconst html = String.raw;\n\n/**\n * @customElement\n * @tagname kr-layout\n * @summary A small layout utility for quickly scaffolding sites.\n * @documentation https://konnorrogers.github.io/kr-layout/components/kr-layout\n * @status experimental\n * @since 0.0.1\n *\n * @slot skip-links - A place to put visually hidden links for things like skipping to main content.\n * @slot header - The header slot for things like navigation\n * @slot main-header - A header that will appear \"inline\" with the main content area.\n * @slot - The main content. The meat and potatos.\n * @slot main-footer - An inline footer with the main content area. This will appear \"above the fold\" if your main content does not cause an overflow.\n * @slot menu - This will appear on the left hand side of the page in LTR languages. This is a good place to provide sidebar navigation.\n * @slot aside - This will appear on the right hand side of the page in LTR languages.\n * @slot footer - This is a footer that will take up 100% width of the page and will appear \"below the fold\" of a page regardless of if main content overflows.\n * @slot dialog - This is a place to put any elements such as toasts, dialogs, etc. Anything which you would normally put at the end of the `<body>`. Generally this is no longer needed because of `popover` attributes.\n *\n * @csspart skip-links - Wrapper around skip-links slot\n * @csspart base - Base div which sets up the initial grid for header, body, footer\n * @csspart header - Wrapper around the header slot\n * @csspart main - Wrapper around the main slot\n * @csspart main-header - Wrapper around the main-header slot\n * @csspart body - Wrapper around the menu, main-content, and aside parts.\n * @csspart menu - Wrapper around the menu slot.\n * @csspart main-content - Wrapper around the default slot. This is the center of your page.\n * @csspart main-footer - Wrapper around the main-footer slot\n * @csspart aside - Wrapper around the aside slot\n * @csspart footer - Wrapper around the footer slot\n * @csspart dialog - Wrapper around the dialog slot\n *\n * @cssproperty --example - An example CSS custom property.\n */\nexport default class KrLayout extends BaseElement {\n  static styles = componentStyles;\n\n  get disableSticky() {\n    return this._disableSticky;\n  }\n\n  /**\n   * @param {null | string} val\n   */\n  set disableSticky(val) {\n    this._disableSticky = val;\n    if (val == null) {\n      this.removeAttribute(\"disable-sticky\");\n    }\n    this.setAttribute(\"disable-sticky\", String(val));\n  }\n\n  /**\n   * @param {string} slot\n   */\n  createResizeObserver(slot) {\n    return new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        if (entry.contentBoxSize) {\n          const contentBoxSize = entry.borderBoxSize[0];\n          if (this.disableSticky && this.disableSticky.includes(slot)) {\n            this.style.setProperty(\n              `--${slot}-height`,\n              `${contentBoxSize.blockSize}px`,\n            );\n          } else {\n            this.style.setProperty(`--${slot}-height`, `0px`);\n          }\n        }\n      }\n    });\n  }\n\n  static get observedAttributes() {\n    return [\"disable-sticky\"];\n  }\n\n  /**\n   * @param {string} name\n   * @param {string | null} oldVal\n   * @param {string | null} newVal\n   */\n  attributeChangedCallback(name, oldVal, newVal) {\n    switch (name) {\n      case \"disable-sticky\":\n        this.disableSticky = newVal;\n        break;\n    }\n  }\n\n  constructor() {\n    super();\n    /**\n     * @type {null | string}\n     */\n    this._disableSticky = null;\n\n    this.headerResizeObserver = this.createResizeObserver(\"header\");\n    this.footerResizeObserver = this.createResizeObserver(\"footer\");\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: \"open\" });\n      // @ts-expect-error\n      this.shadowRoot.innerHTML = /** @type {typeof KrLayout} */ (\n        this.constructor\n      ).render();\n    }\n\n    /** @type {ShadowRoot} */\n    this.shadowRoot;\n  }\n\n  connectedCallback() {\n    setTimeout(() => {\n      this.header = this.shadowRoot.querySelector(\"[part~='header']\");\n      this.footer = this.shadowRoot.querySelector(\"[part~='main-footer']\");\n\n      if (this.header) {\n        this.headerResizeObserver.observe(this.header);\n      }\n\n      if (this.footer) {\n        this.footerResizeObserver.observe(this.footer);\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.header) {\n      this.headerResizeObserver.unobserve(this.header);\n    }\n\n    if (this.footer) {\n      this.footerResizeObserver.unobserve(this.footer);\n    }\n  }\n\n  static renderHTML() {\n    return html`\n      <div class=\"visually-hidden skip-links\" part=\"skip-links\">\n        <slot name=\"skip-links\"> </slot>\n      </div>\n\n      <div class=\"base\" part=\"base\">\n        <div class=\"header\" part=\"header\">\n          <slot name=\"header\"></slot>\n        </div>\n\n        <div class=\"body\" part=\"body\">\n          <div class=\"menu\" part=\"menu\">\n            <slot name=\"menu\"></slot>\n          </div>\n\n          <div class=\"main\" part=\"main\">\n            <div class=\"main-header\" part=\"main-header\">\n              <slot name=\"main-header\"></slot>\n            </div>\n\n            <div class=\"main-content\" part=\"main-content\"><slot></slot></div>\n\n            <div class=\"main-footer\" part=\"main-footer\">\n              <slot name=\"main-footer\"></slot>\n            </div>\n          </div>\n\n          <div class=\"aside\" part=\"aside\">\n            <slot name=\"aside\"></slot>\n          </div>\n        </div>\n\n        <div class=\"footer\" part=\"footer\">\n          <slot name=\"footer\"></slot>\n        </div>\n      </div>\n\n      <div part=\"dialog\" class=\"dialog\">\n        <slot name=\"dialog\"></slot>\n      </div>\n    `;\n  }\n\n  static render() {\n    return html`\n      <!-- version: ${this.version} -->\n      <style>\n        ${this.styles}\n      </style>\n\n      ${this.renderHTML()}\n    `;\n  }\n\n  /**\n   * Renders to declarative shadow dom.\n   */\n  static renderDSD() {\n    return html`<template shadowrootmode=\"open\">\n      <!-- version: ${this.version} -->\n      <style>\n        ${this.styles.trim().split(/\\n/).join(\"\\n  \")}\n      </style>\n\n      <!-- renderHTML() -->\n      ${this.renderHTML()\n        .split(/\\n    /)\n        .join(\"\\n\")\n        .trim()}\n    </template>`;\n  }\n}\n","exports/components/kr-layout/kr-layout.styles.d.ts":"export const componentStyles: string;\n","exports/components/kr-layout/kr-layout.styles.js":"const css = String.raw;\n\nexport const componentStyles = css`\n  *,\n  *:after,\n  *:before {\n    box-sizing: border-box;\n  }\n\n  :host(:dir(rtl)) *,\n  :host(:dir(rtl)) *:after,\n  :host(:dir(rtl)) *:before {\n    direction: rtl;\n  }\n\n  :host(:dir(ltr)) *,\n  :host(:dir(ltr)) *:after,\n  :host(:dir(ltr)) *:before {\n    direction: ltr;\n  }\n\n  .visually-hidden:not(:focus-within) {\n    position: absolute;\n    overflow: hidden;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    width: 1px;\n    height: 1px;\n    white-space: nowrap;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n\n  :host {\n    display: block;\n    box-sizing: border-box;\n    min-height: var(--height);\n    --height: 100vh;\n    --height: 100dvh;\n\n    --menu-width: auto;\n    --main-width: 1fr;\n    --aside-width: auto;\n\n    /** This is a best guess. We'll attempt to calculate this with a resize observer. **/\n    --header-height: 68.33px;\n  }\n\n  :host([variant=\"documentation\"]) {\n    --menu-width: 250px;\n    --main-width: 105ch;\n    --aside-width: auto;\n  }\n\n  :host([variant=\"documentation\"])::part(body) {\n    justify-content: center;\n  }\n\n  *,\n  *:after,\n  *:before {\n    box-sizing: border-box;\n  }\n\n  :host::part(base) {\n    display: grid;\n    /** Header, Main, Footer **/\n    grid-template-rows: minmax(0, auto) minmax(0, 1fr) minmax(0, auto);\n    min-height: var(--height);\n  }\n\n  :host::part(header) {\n    max-width: 100%;\n    position: sticky;\n    background: white;\n    z-index: 1;\n  }\n\n  :is(.header, .aside, .menu, .footer) ::slotted(*) {\n    height: 100%;\n  }\n\n  :is(.aside, .menu) ::slotted(*) {\n    min-width: 100%;\n    width: 100%;\n    max-width: 100%;\n  }\n\n  :host::part(header) {\n    top: 0px;\n  }\n\n  :host::part(body) {\n    display: grid;\n    /** Menu, Main, Aside **/\n    grid-template-columns: minmax(0, var(--menu-width)) minmax(\n        0,\n        var(--main-width)\n      ) minmax(0, var(--aside-width));\n    grid-template-rows: minmax(0, 1fr);\n  }\n\n  :host::part(aside),\n  :host::part(menu) {\n    display: grid;\n    grid-template-columns: minmax(0, 1fr);\n    max-height: calc(var(--height) - var(--header-height));\n    overflow: auto;\n    position: sticky;\n    top: var(--header-height);\n    overscroll-behavior: contain;\n  }\n\n  :host([disable-sticky~=\"header\"]) {\n    --header-height: 0px;\n  }\n\n  :host([disable-sticky~=\"header\"])::part(header) {\n    position: static;\n  }\n\n  :host([disable-sticky~=\"aside\"])::part(aside),\n  :host([disable-sticky~=\"menu\"])::part(menu) {\n    position: static;\n  }\n\n  :host::part(main) {\n    position: relative;\n    display: grid;\n    grid-template-columns: minmax(0, 1fr);\n    /* main-header, main, main-footer */\n    grid-template-rows: minmax(0, auto) minmax(0, 1fr) minmax(0, auto);\n  }\n\n  :host::part(footer) {\n  }\n\n  .skip-links {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: calc(var(--header-height, 48px) - 2px);\n    width: 100vw;\n    z-index: 4;\n    background-color: inherit;\n    display: grid;\n    grid-template-columns: minmax(0, 1fr);\n    place-items: center;\n    text-align: center;\n  }\n`;\n","exports/index.d.ts":"export { default as KrLayout } from \"./components/kr-layout/kr-layout-register.js\";\n","exports/index.js":"export { default as KrLayout } from \"./components/kr-layout/kr-layout-register.js\";\n","internal/base-element.d.ts":"/**\n * @customElement\n */\nexport class BaseElement extends HTMLElement {\n    /**\n     * @type {Record<string, typeof BaseElement>}\n     */\n    static dependencies: Record<string, typeof BaseElement>;\n    static version: string;\n    /**\n     * @type {string}\n     */\n    static baseName: string;\n    /**\n     * @param {string} [name=this.baseName] - Tag name\n     * @param {CustomElementConstructor} [ctor=this] - Constructor to pass to define\n     * @param {ElementDefinitionOptions} [additionalOptions]\n     */\n    static define(name?: string | undefined, ctor?: CustomElementConstructor | undefined, additionalOptions?: ElementDefinitionOptions | undefined): void;\n    /**\n     * Gets directionality of the element\n     * @returns {\"ltr\" | \"rtl\"}\n     */\n    getTextDirection(): \"ltr\" | \"rtl\";\n}\n","internal/base-element.js":"import { version } from \"./version.js\";\n\n// polyfill for SSR compiling templates\nif (typeof HTMLElement === \"undefined\") {\n  // @ts-expect-error\n  globalThis.HTMLElement = class HTMLElement {};\n}\n\n/**\n * @customElement\n */\nexport class BaseElement extends HTMLElement {\n  /**\n   * @type {Record<string, typeof BaseElement>}\n   */\n  static dependencies = {};\n\n  static version = version;\n\n  /**\n   * @type {string}\n   */\n  static baseName;\n\n  /**\n   * @param {string} [name=this.baseName] - Tag name\n   * @param {CustomElementConstructor} [ctor=this] - Constructor to pass to define\n   * @param {ElementDefinitionOptions} [additionalOptions]\n   */\n  static define(name = this.baseName, ctor = this, additionalOptions) {\n    if (customElements.get(name)) {\n      return;\n    }\n\n    customElements.define(name, ctor, additionalOptions);\n  }\n\n  constructor() {\n    super();\n    Object.entries(\n      /** @type {typeof BaseElement} */ (this.constructor).dependencies,\n    ).forEach(([name, ctor]) => {\n      ctor.define(name);\n    });\n  }\n\n  /**\n   * Gets directionality of the element\n   * @returns {\"ltr\" | \"rtl\"}\n   */\n  getTextDirection() {\n    return this.matches(\":dir(rtl)\") ? \"rtl\" : \"ltr\";\n  }\n}\n","internal/base-event.d.ts":"export class BaseEvent extends Event {\n}\n","internal/base-event.js":"export class BaseEvent extends Event {\n  /**\n   * @param {string} name\n   * @param {EventInit} [options={}]\n   */\n  constructor(name, options = {}) {\n    if (options.bubbles == null) options.bubbles = true;\n    if (options.composed == null) options.composed = true;\n    super(name, options);\n  }\n}\n","internal/version.d.ts":"export const version: \"0.0.2\";\n","internal/version.js":"// This file is auto-generated. Do not manually edit this.\nexport const version = \"0.0.2\";\n"}
